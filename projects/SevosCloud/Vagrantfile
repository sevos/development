# -*- mode: ruby -*-
# vi: set ft=ruby :

TLD = 'sevoscloud'

todo_database = {
    :adapter => 'postgresql',
    :database => 'todo_production',
    :host => 'db.sevoscloud',
    :username => 'todo',
    :password => 'qwerty'
}

nodes = {
  :db => {
    :ipaddress => "192.168.69.3",
    :roles => "database-postgresql",
    :memory => 512,
    :config => {
        :databases => [
            {
              :name => 'todo_production',
              :username => 'todo',
              :password => 'qwerty'
            }
        ]
    }
  },
  :app1 => {
    :ipaddress => "192.168.69.10",
    :roles => "ruby-deployment-target",
    :memory => 1024,
    :config => {
      :application => {
        :environment => 'production',
        :database => todo_database
      },
      :ruby => {
          :version => '1.9.3-p0'
      }
    }
  },
  :app2 => {
      :ipaddress => "192.168.69.11",
      :roles => "ruby-deployment-target",
      :memory => 1024,
      :config => {
        :application => {
          :environment => 'production',
          :database => todo_database
      },
      :ruby => {
          :version => '1.9.3-p0'
      }
    }
  },
  :app3 => {
      :ipaddress => "192.168.69.12",
      :roles => "ruby-deployment-target",
      :memory => 1024,
      :config => {
        :application => {
          :environment => 'production',
          :database => todo_database
      },
      :ruby => {
          :version => '1.9.3-p0'
      }
    }
  }
}

hosts = nodes.map { |name, options|
  { :ip => options[:ipaddress], :name => name.to_s }
}

Vagrant::Config.run do |global_config|
  global_config.vm.box = "base"

  nodes.each_pair do |name, options|
    global_config.vm.define name do |config|
      vm_name = name.to_s
      ipaddress = options[:ipaddress]

      config.dns.tld = TLD
      config.vm.share_folder("v-root", "/vagrant", ".", :disabled => true)
      config.vm.boot_mode = :headless
      config.vm.host_name = vm_name
      config.vm.network :hostonly, ipaddress

      if options[:memory]
        config.vm.customize ["modifyvm", :id, "--memory", options[:memory]]
      end

      config.vm.provision :chef_solo do |chef|
        chef.cookbooks_path = ["../../chef/cookbooks", "../../chef/custom-cookbooks"]
        chef.roles_path = "../../chef/roles"
        chef.data_bags_path = "../../chef/data_bags"

        chef.add_role 'base'
        Array(options[:roles]).each   { |role|   chef.add_role role }
        Array(options[:recipes]).each { |recipe| chef.add_recipe recipe }


        # You may also specify custom JSON attributes:
        chef.json = {:dns_client => {
            :tld => TLD,
            :hosts => hosts
          }
        }.merge(options[:config] || {})
      end
    end
  end


  # config.vm.provision :chef_client do |chef|
  #   chef.chef_server_url = "https://api.opscode.com/organizations/ORGNAME"
  #   chef.validation_key_path = "ORGNAME-validator.pem"
  # end
  #
  # If you're using the Opscode platform, your validator client is
  # ORGNAME-validator, replacing ORGNAME with your organization name.
  #
  # IF you have your own Chef Server, the default validation client name is
  # chef-validator, unless you changed the configuration.
  #
  #   chef.validation_client_name = "ORGNAME-validator"
end
